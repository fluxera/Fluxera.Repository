namespace Fluxera.Repository.Query{	using System.Linq;	using JetBrains.Annotations;	/// <summary>	///     A contract for a paging and/or sorting criteria builder.	/// </summary>	/// <typeparam name="T">The type of the aggregate root.</typeparam>	[PublicAPI]	public interface IQueryOptions<T> where T : class	{		IQueryable<T> ApplyTo(IQueryable<T> queryable);		bool TryGetPagingOptions(out IPagingOptions<T>? pagingOptions);		bool TryGetSkipTakeOptions(out ISkipTakeOptions<T>? skipTakeOptions);		bool TryGetSortingOptions(out ISortingOptions<T>? sortingOptions);	}}